@mixin margin-block-edge-0 {
	&:first-child,
	&:only-child {
		margin-block-start: 0;
	}

	&:last-child,
	&:only-child {
		margin-block-end: 0;
	}
}

* {
	box-decoration-break: clone;

	scrollbar-color: var(--sugar-color-scrollbar) var(--sugar-background-scrollbar);

	&::-webkit-scrollbar,
	&::-webkit-scrollbar-track {
		background-color: var(--sugar-background-scrollbar);
	}

	&::-webkit-scrollbar-thumb {
		background-color: var(--sugar-color-scrollbar);
	}

	&::-moz-selection {
		background: var(--sugar-background-selection);
	}

	&::selection {
		background: var(--sugar-background-selection);
	}
}

body {
	font-family: var(--sugar-font-body);
	font-size: var(--sugar-text-base);
	font-weight: var(--sugar-font-normal);
	font-kerning: normal;
	font-optical-sizing: auto;
	text-rendering: optimizeLegibility;

	background-color: var(--sugar-background-body);
	color: var(--sugar-color-body);

	// see https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling
	-webkit-overflow-scrolling: touch;

	a {
		color: var(--sugar-color-link);
		cursor: pointer;
		text-decoration-line: underline;
		text-decoration-style: dotted;
		text-decoration-skip-ink: auto;
		text-decoration-thickness: var(--sugar-decoration-sm);

		// reset these colors in case they've been customized
		b,
		strong,
		i,
		em {
			color: currentColor;
		}

		// handle focus received from mouse etc.
		&:focus:not(:focus-visible),
		&:hover {
			text-decoration-style: solid;
			text-decoration-thickness: var(--sugar-decoration-base);
			color: var(--sugar-color-link-hover);
		}

		&:active {
			text-decoration-style: solid;
			text-decoration-thickness: var(--sugar-decoration-base);
			color: var(--sugar-color-link-active);
		}

		// handle focus from keyboard or tab key
		// see https://www.tpgi.com/focus-visible-and-backwards-compatibility/
		&:focus-visible {
			text-decoration-color: transparent;
			color: var(--sugar-color-link-hover);
			border-radius: var(--sugar-radius-sm);
			outline-color: var(--sugar-color-link-outline);
			outline-style: solid;
			outline-width: 0.25ch;
			outline-offset: 0.125em;
		}
	}

	cite {
		font-style: italic;
	}

	blockquote {
		padding: 0 0 0 2ch;
		border-inline-start: 3px solid var(--sugar-color-border);
		color: var(--sugar-color-emphasis);
	}

	hr {
		background-color: var(--sugar-color-border);
		border: none;
		display: block;
		height: 1px;
		margin-block: var(--sugar-gap-base);
	}

	mark,
	del,
	ins {
		border-radius: var(--sugar-radius-sm);
		padding: 0.2ch 0.6ch;
		font-size: 0.95em;
	}

	del {
		background-color: var(--sugar-background-del);
		border: 1px solid var(--sugar-background-del);
		text-decoration-line: line-through;
	}

	ins {
		background-color: var(--sugar-background-ins);
		border: 1px solid var(--sugar-background-ins);
		text-decoration: none;
	}

	mark {
		background-color: var(--sugar-background-mark);
		border: 1px solid var(--sugar-background-mark);
		color: inherit;
	}

	summary {
		display: list-item;
	}

	details {
		display: block;
		border: 1px solid var(--sugar-color-border);
		border-radius: var(--sugar-radius-base);
		padding: 0 0.75em 0;

		summary {
			background-color: var(--sugar-background-summary);
			margin: 0 -0.75em 0;
			padding: 0.5em 0.75em;
			cursor: pointer;

			// handle focus from keyboard or tab key
			// see https://www.tpgi.com/focus-visible-and-backwards-compatibility/
			&:focus-visible {
				background-color: var(--sugar-color-link-hover);
				border-radius: var(--sugar-radius-base);
				outline-color: var(--sugar-color-link-outline);
				outline-style: solid;
				outline-width: 0.25ch;
				outline-offset: 0.125em;
			}
		}

		&[open] {
			padding-block-end: 0.5em;

			summary {
				margin-block-end: 0.5em;
				border-block-end: 1px solid var(--sugar-color-border);
			}
		}
	}

	i,
	em {
		color: var(--sugar-color-emphasis);
	}

	b,
	strong {
		font-weight: var(--sugar-font-bold);
		color: var(--sugar-color-stress);
	}

	small,
	sub,
	sup {
		font-size: var(--sugar-text-small);
	}

	sub {
		vertical-align: sub;
	}

	sup {
		vertical-align: super;
	}

	var {
		font-family: var(--sugar-font-mono);
	}

	img {
		border-radius: var(--sugar-radius-base);
	}

	figure {
		margin-block-end: calc(var(--sugar-gap-base) * 2);
		text-align: center;
		@include margin-block-edge-0;
	}

	figcaption {
		font-size: var(--sugar-text-small);
		margin-block-start: calc(var(--sugar-gap-base) / 1.6);
		color: var(--sugar-color-emphasis);
	}

	p,
	dl,
	ol,
	ul,
	aside,
	blockquote,
	pre,
	table {
		&:not(:last-child) {
			margin-block-end: var(--sugar-gap-base);
		}
	}

	p:empty {
		display: none;
	}

	h1 {
		font-size: 2.5rem;
	}

	h2 {
		font-size: 2rem;
	}

	h3 {
		font-size: 1.5rem;
	}

	h4 {
		font-size: 1.25rem;
	}

	h5 {
		font-size: 1.125rem;
	}

	h6 {
		font-size: 0.95rem;
	}

	:is(h1, h2, h3, h4, h5, h6) {
		font-weight: var(--sugar-font-bold);
		color: var(--sugar-color-headings);
		margin-block-start: 2em;
		margin-block-end: 1em;

		& + :is(h1, h2, h3, h4, h5, h6) {
			margin-block-start: 0;
		}

		@include margin-block-edge-0;
	}

	menu {
		list-style: none;
	}

	ol,
	ul {
		list-style-position: outside;
	}

	ol {
		list-style-type: decimal;
	
		ol {
			list-style-type: lower-alpha;
	
			ol {
				list-style-type: lower-roman;
	
				ol {
					list-style-type: lower-greek;
	
					ol {
						list-style-type: decimal;
	
						ol {
							list-style-type: lower-alpha;
						}
					}
				}
			}
		}
	}
	
	ul {
		list-style-type: disc;
	
		ul {
			list-style-type: circle;
	
			ul {
				list-style-type: square;
	
				ul {
					list-style-type: circle;
	
					ul {
						list-style-type: disc;
	
						ul {
							list-style-type: circle;
						}
					}
				}
			}
		}
	}

	dd {
		margin-inline-start: var(--sugar-gap-base);
	}
	
	dt {
		font-weight: var(--sugar-font-bold);
	}

	li {
		--list-item-gap: calc(var(--sugar-gap-base) / 3);

		&::marker {
			color: var(--sugar-color-marker);
		}

		& > *:not(:last-child) {
			margin-block-end: var(--list-item-gap);
		}

		& + li,
		& > :last-child > li,
		& > :last-child > li {
			margin-block-start: var(--list-item-gap);
		}
	}

	input,
	textarea,
	select {
		// controls accent colors on input and progress elements
		accent-color: var(--sugar-color-accent);
		// controls caret's color on input elements
		caret-color: var(--sugar-color-accent);
		outline-color: var(--sugar-color-accent);
		border-color: var(--sugar-color-accent);

		&::placeholder {
			color: var(--sugar-color-emphasis);
		}

		// handle focus received from mouse etc.
		&:focus:not(:focus-visible),
		&:hover {
			color: var(--sugar-color-link-hover);
			border-color: var(--sugar-color-link-outline);
		}

		// handle focus from keyboard or tab key
		// see https://www.tpgi.com/focus-visible-and-backwards-compatibility/
		&:focus-visible {
			color: var(--sugar-color-link-hover);
			outline-color: var(--sugar-color-link-outline);
		}
	}

	code,
	kbd,
	samp,
	pre {
		font-family: var(--sugar-font-mono);
		font-size: var(--sugar-text-code);
		-moz-osx-font-smoothing: auto;
		-webkit-font-smoothing: auto;
		background-color: var(--sugar-background-code);
		border: 1px solid var(--sugar-background-code);
		border-radius: var(--sugar-radius-sm);
	}

	code,
	kbd,
	samp {
		padding: 0.2ch 0.6ch;
		color: var(--sugar-color-code);
	}

	pre {
		overflow: hidden;
		border-radius: var(--sugar-radius-base);

		code {
			display: block;
			background: none;
			overflow: auto;
			border: none;
			padding: 1em 1.2em;
			font-size: 1em;
			white-space: pre;
		}
	}

	table {
		display: block;
		width: 100%;
		overflow-x: auto;
		
		pre {
			white-space: pre-wrap;
		}
	}

	th {
		font-weight: var(--sugar-font-bold);
	}

	th,
	td {
		font-size: 1em;
		padding: calc(var(--sugar-gap-base) / 2.5) calc(var(--sugar-gap-base) / 2);
		border: 1px solid var(--sugar-color-border);
	}

	thead,
	tfoot {
		tr {
			background-color: var(--sugar-background-table-active);
		}

		th,
		td {
			color: var(--sugar-color-table-active);

			code {
				background-color: var(--sugar-background-table);
			}
		}
	}

	tbody tr {
		background-color: var(--sugar-background-table);
	}
}
